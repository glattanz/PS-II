N1 - Projeto de Sistemas II
Nome: Gabrielle Lattanzi

CLIENTE:
public class Cliente {

    private String nome;
    private String endereço;
    private boolean suspenso;

    public Cliente(String nome, String endereço){
        this.nome = nome;
        this.endereço = endereço;
        this.suspenso = true;
    }
}
==================================================================

LOCAÇÃO:
import java.time.LocalDate;

public class Locacao {

    private int tempoLocacao;
    private Double tamanhoContainer;
    private Cliente cliente;
    private EstadoLocacao estadoLocacao;

    public Locacao(int tempoLocacao, Double tamanhoContainer, Cliente cliente){
        this.tempoLocacao = tempoLocacao;
        this.tamanhoContainer = tamanhoContainer;
        this.cliente = cliente;
        this.estadoLocacao = new Reservada(LocalDate.now(), this);
    }

    public Locacao(Locacao locacao) {
        this.tempoLocacao = locacao.getTempoLocacao();
        this.tamanhoContainer = getTamanhoContainer();
        this.cliente = getCliente();
        this.estadoLocacao = new Reservada(LocalDate.now(), this);
    }

    public Locacao(){

    }

    public int getTempoLocacao() {
        return tempoLocacao;
    }
    public Double getTamanhoContainer() {
        return tamanhoContainer;
    }
    public Cliente getCliente() {
        return cliente;
    }
    public void setEstadoLocacao(EstadoLocacao estadoLocacao) {
        this.estadoLocacao = estadoLocacao;
    }
}
=========================================================================

ESTADO LOCAÇÃO:
public abstract class EstadoLocacao{

    EstadoLocacao(){

    }
}
=====================================================================

RESERVADA:
import java.time.LocalDate;

public class Reservada extends EstadoLocacao{

    private LocalDate dataReservada;
    private LocalDate dataPrevistaFim;

    public Reservada(LocalDate dataReservada, Locacao locacao){
        this.dataReservada = dataReservada;
        this.dataPrevistaFim = dataReservada.plusDays(locacao.getTempoLocacao());
    }

    public void RealizarPagamento(Double valorPago, Locacao locacao, Pagamento pagamento){
        new PgtoConcluido(valorPago);
        locacao.setEstadoLocacao(new EmAndamento());
    }
}
======================================================================

EM ANDAMENTO:
import java.time.LocalDate;

public class EmAndamento extends EstadoLocacao{

    private LocalDate dataInicio;

    public EmAndamento(){
        this.dataInicio = LocalDate.now();
    }

    private void concluirLocacao(Locacao locacao){
            locacao.setEstadoLocacao(new Concluida());
    }
}
==================================================================

CONCLUIDA:
import java.time.LocalDate;

public class Concluida extends EstadoLocacao{

    private LocalDate dataFim;

    public Concluida(){
        this.dataFim = LocalDate.now();
    }
}
=====================================================================

PAGAMENTO:

public class Pagamento {

    Double valorDevido;
    Locacao locacao;
    EstadoPagamento estadoPagamento;

    public Pagamento(){
        this.estadoPagamento = EstadoPagamento.PENDENTE;
    }
}
====================================================================

ESTADO PAGAMENTO:
public enum EstadoPagamento {

    PENDENTE,
    CONCLUIDO
}
====================================================================

PGTO PENDENTE:
public class PgtoPendente extends Pagamento{

    public PgtoPendente(Double tamanhoContainer, Locacao locacao){
        if(tamanhoContainer<10){
            this.valorDevido = 100.0;
        }else if(tamanhoContainer<100){
            this.valorDevido = 500.0;
        }else if(tamanhoContainer<500) {
            this.valorDevido = 1000.0;
        }

        this.locacao = locacao;
    }
}
====================================================================

PGTO CONCLUIDO:
import java.time.LocalDate;

public class PgtoConcluido extends Pagamento{

    private Double valorPago;
    private LocalDate dataPagemento;

    public PgtoConcluido(Double valorPago){
        this.valorPago = valorPago;
        this.dataPagemento = LocalDate.now();

        if(valorPago == this.valorDevido){
            this.estadoPagamento = EstadoPagamento.CONCLUIDO;
        }
    }
}
====================================================================